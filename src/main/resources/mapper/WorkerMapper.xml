<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mybatis.mapper.WorkerMapper">

    <resultMap id="worker" type="bean.Worker">
        <result property="firstName" column="firstname"/>
        <result property="lastName" column="lastname"/>
        <result property="middleName" column="subject"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="email" column="subject"/>
        <result property="employmentDate" column="employment_date"/>
        <result property="dateOfDismissal" column="date_of_dismissal"/>
        <result property="position" column="position"/>
        <result property="headDepartment" column="head_department"/>
    </resultMap>



    <select id="getWorkerByFirstNameAndLastName"  parameterType="map" resultMap = "worker">
        SELECT * FROM  workers w
        JOIN positions p ON w.position_id = p.id WHERE firstname = #{firstName} and lastname = #{lastName};
    </select>

    <select id="getWorkersDepartmentByDepartmentName"  parameterType="java.lang.String" resultMap = "worker">
        SELECT * FROM  workers w
        JOIN departments d ON w.department_id = d.id WHERE name = #{departmentName} ORDER BY lastname;
    </select>

    <select id="getHeadDepartmentByDepartmentName"  parameterType="java.lang.String" resultMap = "worker">
        SELECT * FROM  workers w JOIN departments d ON w.department_id = d.id
        WHERE name = #{departmentName} AND head_department = true;
    </select>

    <select id="getAllWorkers"   resultMap = "worker">
        SELECT * FROM  workers ORDER BY lastname;
    </select>



    <select id="getSumSalaryWorkersDepartmentByDepartmentName"  parameterType="java.lang.String" resultType="java.lang.Integer" >
        SELECT SUM(salary) FROM  workers w JOIN departments d ON w.department_id = d.id
        WHERE name = #{departmentName};
    </select>


    <insert id="insertWorker" parameterType="map">
        insert into workers (firstname , lastname, middlename, sex, birthday, phone_number, email, employment_date,
        date_of_dismissal, position_id, salary, head_department, department_id)
        values (#{firstName},#{lastName},  #{middleName} , #{sex}, #{birthday}, #{phoneNumber},
        #{email}, #{employmentDate}, #{dateOfDismissal}, (SELECT id FROM positions WHERE position = #{position}),
        #{salary}, #{headDepartment}, (SELECT id FROM departments WHERE name = #{nameDepartment}));
    </insert>

    <update id="updateWorker" parameterType="map">
        UPDATE workers
        SET firstname =  #{firstName}, lastname = #{lastName}, middlename = #{middleName}, sex = #{sex}, birthday = #{birthday},
        phone_number =#{phoneNumber}, email = #{email}, employment_date = #{employmentDate},
        date_of_dismissal = #{dateOfDismissal}, position_id = (SELECT id FROM positions WHERE position = #{position}), salary = #{salary},
        head_department = #{headDepartment}, department_id = (SELECT id FROM departments WHERE name = #{nameDepartment})
        WHERE firstname = #{oldFirstName} AND lastname = #{oldLastName};
    </update>



    <update id="updateDismissalWorker" parameterType="map">
        UPDATE workers
        SET date_of_dismissal = #{dateOfDismissal}
        WHERE firstname = #{firstName} AND lastname = #{lastName};
    </update>



    <update id="updateTransferWorker" parameterType="map">
        UPDATE workers
        SET department_id = (SELECT id FROM departments WHERE name = #{nameDepartment})
        WHERE firstname = #{firstName} AND lastname = #{lastName};
    </update>


</mapper>