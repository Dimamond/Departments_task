<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="ru.mybatis.mapper.WorkerMapper">

    <resultMap id="worker" type="ru.bean.Worker">
        <result property="firstName" column="firstname"/>
        <result property="lastName" column="lastname"/>
        <result property="middleName" column="subject"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="email" column="subject"/>
        <result property="employmentDate" column="employment_date"/>
        <result property="dateOfDismissal" column="date_of_dismissal"/>
        <result property="position" column="position"/>
        <result property="headDepartment" column="head_department"/>
    </resultMap>



    <select id="getHeadByDepartmentId"  parameterType="java.lang.Long" resultMap = "worker">
        SELECT * FROM  workers w JOIN positions p ON w.position_id = p.id
        WHERE department_id = #{departmentId} AND head_department = true;

    </select>

    <select id="getCountWorkersByDepartmentId"  parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT count(*) FROM  workers WHERE department_id = #{departmentId}
    </select>

    <select id="getSumSalaryWorkersDepartmentByDepartmentId"  parameterType="java.lang.Long" resultType="java.lang.Integer" >
        SELECT SUM(salary) FROM  workers WHERE department_id = #{departmentId};
    </select>


    <select id="getWorkersDepartmentByDepartmentId"  parameterType="java.lang.Long" resultMap = "worker" >
        SELECT * FROM  workers w JOIN positions p ON w.position_id = p.id
        WHERE department_id = #{departmentId};

    </select>

    <insert id="insertWorker" parameterType="map">
        insert into workers (firstname , lastname, middlename, sex, birthday, phone_number, email, employment_date,
        date_of_dismissal, position_id, salary, head_department, department_id)
        values (#{firstName},#{lastName},  #{middleName} , #{sex}, #{birthday}, #{phoneNumber},
        #{email}, #{employmentDate}, #{dateOfDismissal}, (SELECT id FROM positions WHERE position = #{position}),
        #{salary}, #{headDepartment}, #{departmentId});
    </insert>


    <update id="updateWorker" parameterType="map">
        UPDATE workers
        SET firstname =  #{firstName}, lastname = #{lastName}, middlename = #{middleName}, sex = #{sex}, birthday = #{birthday},
        phone_number =#{phoneNumber}, email = #{email}, employment_date = #{employmentDate},
        date_of_dismissal = #{dateOfDismissal}, position_id = (SELECT id FROM positions WHERE position = #{position}), salary = #{salary},
        head_department = #{headDepartment} WHERE id = #{id};
    </update>

    <update id="updateDismissalWorker" parameterType="map">
        UPDATE workers
        SET date_of_dismissal = #{dateOfDismissal}
        WHERE id = #{id};
    </update>

    <delete id="deleteWorker" parameterType="java.lang.Long">
        DELETE FROM workers
        WHERE id = #{id};
    </delete>


    <select id="getWorkerById"  parameterType="java.lang.Long" resultMap = "worker">
        SELECT * FROM  workers w
        JOIN positions p ON w.position_id = p.id WHERE id = #{id};
    </select>

    <update id="updateTransferWorker" parameterType="map">
        UPDATE workers
        SET department_id = (SELECT id FROM departments WHERE name = #{nameDepartment})
        WHERE id = #{id};
    </update>

    <update id="updateNewDepartment" parameterType="map">
        UPDATE workers SET department_id = (SELECT id FROM departments WHERE name = #{newDepartmentName}),
        head_department = false
        WHERE department_id = #{departmentId};
    </update>



    <select id="getHeadByIdWorker"  parameterType="java.lang.Long" resultMap = "worker">

        SELECT * FROM  workers w
        JOIN positions p ON w.position_id = p.id
        WHERE department_id = (SELECT department_id FROM workers WHERE id = #{id})
        AND head_department = true;
    </select>


    <select id="getWorkersByBirthday" parameterType="java.util.Date"   resultMap = "worker">
        SELECT * FROM  workers w
        JOIN positions p ON w.position_id = p.id
        WHERE birthday = #{birthday};
    </select>

    <select id="getWorkersByFirstNameAndLastName" parameterType="map"   resultMap = "worker">
        SELECT * FROM  workers w
        JOIN positions p ON w.position_id = p.id
        WHERE firstname = #{firstName} AND lastname = #{lastName};
    </select>

</mapper>